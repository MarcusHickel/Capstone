<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rocket">

    <!-- <xacro:include filename="ros2_control.xacro" /> -->

    <!-- <link name="world"></link>  Already made in main robot -->

    <!-- <joint name="world_joint" type="planar">
        <origin xyz="3 0 3" rpy="0 0 0"/>
        <parent link="world"/>
        <child link="rocket_link"/>
        <axis xyz="1 0 0"/>
        <limit lower="0" upper="100" velocity="100" effort="100"/> 
    </joint> -->

    <link name="x_link">
        <visual>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <geometry>
                <cylinder length=".1" radius=".5" />
            </geometry>
            <material name="green">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <inertial>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <mass value="0.001" />
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0" />
        </inertial>
    </link>

    <!-- <link name="y_link">
        <visual>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <geometry>
                <cylinder length=".1" radius=".5" />
            </geometry>
            <material name="green">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <inertial>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <mass value="0.001" />
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0" />
        </inertial>
    </link>

    <link name="xy_link">
        <visual>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <geometry>
                <cylinder length=".1" radius=".5" />
            </geometry>
            <material name="green">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <inertial>
            <origin xyz="0 0 0.05" rpy="0 0 0"/>
            <mass value="0.001" />
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0" />
        </inertial>
    </link> -->

    <joint name="x" type="fixed">
        <origin xyz="15 5 0" rpy="0 0 0"/>
        <parent link="world"/>
        <child link="x_link"/>
        <axis xyz="1 0 0"/>
        <limit lower="-100" upper="100" velocity="100" effort="100"/> 
    </joint>

    <!-- <joint name="xy" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="x_link"/>
        <child link="xy_link"/>
    </joint>

    <joint name="y" type="prismatic"> Breaks because Gazebo doesnt like "free" joints Maybe a 'fixed' buffer?
        <origin xyz="0 0 1" rpy="0 0 0"/>
        <parent link="x_link"/>
        <child link="y_link"/>
        <axis xyz="0 0 1"/>
        <limit lower="0" upper="100" velocity="100" effort="100"/> 
    </joint> -->

    <joint name="rocket_joint" type="continuous">
        <origin xyz="0 0 1" rpy="0 ${2*pi} 0"/>
        <parent link="x_link"/>
        <child link="rocket_link"/>
        <axis xyz="1 0 0"/>
        <limit lower="0" upper="100" velocity="100" effort="100"/> 
    </joint>

    <link name="rocket_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="100.120" />
            <inertia ixx="7.58333333333e-06" ixy="0.0" ixz="0.0" iyy="7.58333333333e-06" iyz="0.0" izz="1.25e-05"/> <!-- This is actually wrong for this rocket -->
        </inertial>
                <collision>
                    <origin rpy="0 0 0" xyz="0 0 0.3"/>
                    <geometry>
                        <box size="0.1 0.1 .6"/>
                    </geometry>
                </collision>
                <visual>
                    <origin rpy="1.5708 0 0" xyz="0 0 0.5"/>
                    <geometry>
                        <mesh filename="$(find trackingplatform)/models/Example.stl" scale="0.001 0.001 0.001"/>
                        <!-- <box size="1 1 1"/> -->
                        <material name="orange">
                            <color rgba="1 0.3 0.1 1"/>
                        </material>
                    </geometry>
                </visual>
    </link>

    <gazebo reference="rocket_link">
        <material>Gazebo/Orange</material>
    </gazebo>

  <gazebo reference="rocket_link">
    <gravity>0</gravity>
  </gazebo>

    <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher"
            filename="libgazebo_ros_joint_state_publisher.so">
            <update_rate>20</update_rate>
            <joint_name>x</joint_name>
        </plugin>
    </gazebo>


    <!-- This plugin will read a JointTrajectory message from the /set_joint_trajectory topic 
            and move the machine accordingly. It's a bit clunky but it works. -->
    <!-- You'll probably want to add damping to the joints to stop them it flopping around. 
            e.g. <dynamics damping="10.0" friction="10.0"/> -->
    <!-- Here's an example message to publish to test it:
            ros2 topic pub -1 /set_joint_trajectory trajectory_msgs/msg/JointTrajectory  '{header: {frame_id: world}, joint_names: [slider_joint, arm_joint], points: [  {positions: {0.8,0.6}} ]}' -->
    <gazebo>
        <plugin name="gazebo_ros_joint_pose_trajectory"
            filename="libgazebo_ros_joint_pose_trajectory.so">
            <update_rate>2</update_rate>
        </plugin>
    </gazebo>

</robot>
